{{#demo-css}}
<h3 class="title"><b>Component</b>::mini-time-change</h3>
<desc>A helper component to the <prop>mini-datetime</prop> component which provides a UI for changing time, timezone, and duration attributes.</desc>

<h3>Basic Example</h3>

<row>
  <widget class="{{if containerSize 'wide'}}">
    {{mini-time-change
      time=myTime
      start='9:00'
      end='18:00'
      duration=duration
      onTimeChange=(action 'onTimeChange')
      onDurationChange=(action 'onDurationChange')
    }}
  </widget>
  <code>
    {{display-component componentName='mini-time-change'
    time=myTime
    start='9:00'
    end='18:00'
    duration=duration
    onTimeChange=(action 'onTimeChange')
    onDurationChange=(action 'onDurationChange')
    }}
  </code>

</row>
<row>
  <description>
    <p>
      Notice that you can set time to either:
      <ul>
        <li>A string (demonstrated), using a 24hr time</li>
        <li>A number; where the number is the number of minutes into the day</li>
      </ul>
      The same applies to the <prop>start</prop> and <prop>end</prop> constraints. In the case of the <prop>onTimeChange</prop> event though it is important to note that what is passed back is always the number of minutes since start of the day.
    </p>
    <hr/>
    <p class='downer'>
      Note that this control uses <i>flexbox</i> for layout and will horizontally use all of the space given it. You can see this by using the button below to vary the container size.
    </p>
    container size: {{ui-toggle-button on='wide' off='narrow' value=containerSize}}
  </description>
</row>


{{/demo-css}}
